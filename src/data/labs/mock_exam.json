[
    {
        "id": "mock_exam",
        "title": "Προσομοίωση Εξέτασης",
        "question": "Να γράψετε πρόγραμμα σε συμβολική γλώσσα RISC-V το οποίο:\n\nα'. Διαβάζει μέχρι είκοσι θετικούς ακεραίους από την κονσόλα και του αποθηκεύει σε έναν πίνακα μνήμης. Η ανάγνωση σταματά όταν συμπληρωθούν οι αριθμοί ή εισαχθεί άλλος αριθμός (μηδέν ή αρνητικός). Αν εισαχθούν λιγότεροι από είκοσι έγκυροι αριθμοί τα υπόλοιπα στοιχεία του πίνακα να συμπληρωθούν με μηδενικά.\n\nβ'. Καλεί συνάρτηση με παράμετρο τη διεύθηνση μνήμης από όπου ξεκινά ο πίνακας, η οποία υπολογίζει και επιστρέφει το άθροισμα των αριθμών του πίνακα.\n\nγ'. Μετά την επιστροφή της συνάρτησης το πρόγραμμα εκτυπώνει το αποτέλεσμά της.",
        "solution": "```\n# Mock Exam\n\n#---------------------- text segment ---------------------#\n    .text\n    .globl ___start\n\n___start:\n    # Load address of array into t3\n    la a3, numbers\n\n    # Counter for number of valid inputs\n    li t1, 0\n\n    # Max number of inputs to store\n    li t2, 20\n\nquestion1:\n    # get integer from user\n    li a7, 5\n    ecall\n\n    # move result to a1\n    mv a1, a0\n\n    # If input <= 0, stop \n    blez a1, after_loop\n\n    # Store input at current address\n    sw a1, 0(a3)\n\n    # Move to next word in array\n    addi a3, a3, 4\n\n    # Increment counter\n    addi t1, t1, 1\n\n    # If we've read 20 numbers, stop\n    beq t1, t2, after_loop\n\n    # Repeat the loop\n    j question1\n\nafter_loop:\n    # get back to the start of the word\n    la a3, numbers\n    jal question2\n\nquestion2:\n    # Counter to store the sum\n    li a0, 0\n\n    # Counter to store the amount of numbers added\n    li t1, 0\n\n    li t2, 20\n\n    loop:\n\n    # Add number to the sum\n    lw t4, 0(a3)\n    add a0, a0, t4\n\n    # Move to the next number in the array\n    addi a3, a3, 4\n\n    # Increase the counter of numbers added to the sum\n    addi t1, t1, 1\n\n    beq t1, t2, print\n\n    j loop\n\nprint:\n    li a7, 1\n    ecall\n\n    j end\n\nend:\n    li a7, 10          \n    ecall\n\n#---------------------- data segment ---------------------#\n    .data\nnumbers:  .word 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n```"
    }
]