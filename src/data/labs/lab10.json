[
    {
        "id": "10_2",
        "title": "E10.2 Σύγκριση επεξεργαστών ενός κύκλου και με διοχέτευση",
        "question": "Γράψτε πρόγραμμα σε συμβολική γλώσσα RISC-V το οποίο θα ταξινομεί έναν πίνακα 100 στοιχείων με τη μέθοδο της φυσαλίδας (bubblesort). Δοκιμάστε να το εκτελέσετε στον προσομοιωτή QtRVsim σε τρεις προσομοιώσεις επεξεργαστών:\n\nαʹ. Σ' έναν επεξεργαστή ενός κύκλου\nβʹ. Σ' έναν επεξεργαστή με διοχέτευση και μονάδα ελέγχου κινδύνων χωρίς προώθηση και πρόβλεψη διακλάδωσης\nγʹ. Σ' έναν επεξεργαστή με διοχέτευση και μονάδα ελέγχου κινδύνων με προώθηση και πρόβλεψη διακλάδωσης\n\nΠοιος επεξεργαστής χρειάζεται περισσότερους κύκλους για να εκτελέσει το πρόγραμμα;\nΜπορείτε να βγάλετε συμπέρασμα ποιος επεξεργαστής είναι ο πιο αργός στην εκτέλεση του προγράμματός σας;\nΑιτιολογείστε την απάντησή σας.",
        "solution": "```\n# E10.2\n\n.text\n.globl _start\n\n_start:\n    la s0, array\n    li s1, 6\n\n    mv a0, s0\n    mv a1, s1\n    jal PrintArray\n\n    mv a0, s0\n    mv a1, s1\n    jal bubblesort\n\n    mv a0, s0\n    mv a1, s1\n    jal PrintArray\n\n    jal Exit\n\n# bubblesort(int32* array, uint32 len)\nbubblesort:\n    xor t0, t0, t0\n   .bubblesort_loop_outer:\n    beq t0, a1, .bubblesort_loop_outer_done\n\n    xor t1, t1, t1\n    addi t2, a1, -1\n    sub t2, t2, t0\n    mv t3, a0\n  .bubblesort_loop_inner:\n    beq t1, t2, .bubblesort_loop_inner_done\n\n    lw t5, 0(t3)\n    lw t6, 4(t3)\n\n    # The \"swap\" path is relatively uncommon compared to\n    # the \"no swap\" path. We will help the branch predictor\n    # initially by putting the least common path out of the\n    # way.\n    bgt t5, t6, .bubblesort_swap\n\n  .bubblesort_loop_inner_next:\n    addi t1, t1, 1\n    addi t3, t3, 4\n    j .bubblesort_loop_inner\n\n\n  .bubblesort_loop_inner_done:\n    addi t0, t0, 1\n    j .bubblesort_loop_outer\n\n  .bubblesort_loop_outer_done:\n    jr ra\n\n  .bubblesort_swap:\n    sw t6, 0(t3)\n    sw t5, 4(t3)\n    j .bubblesort_loop_inner_next\n\n# PrintArray(int32* array, uint32 len)\nPrintArray:\n    addi sp, sp, -12\n    sw ra, 8(sp)\n    sw s1, 4(sp)\n    sw s0, 0(sp)\n\n    mv s0, a0\n    mv s1, a1\n\n    la a0, BOPEN\n    jal PrintString\n\n   .PrintArray_print_next_elem:\n    beqz s1, .PrintArray_done\n\n    lw a0, 0(s0)\n    jal PrintInt\n\n    la a0, SEP\n    jal PrintString\n\n    addi s0, s0, 4\n    addi s1, s1, -1\n    j .PrintArray_print_next_elem\n\n  .PrintArray_done:\n    la a0, BCLSE\n    jal PrintString\n\n    lw s0, 0(sp)\n    lw s1, 4(sp)\n    lw ra, 8(sp)\n    addi sp, sp, 12\n    jr ra\n\nPrintInt:\n    li a7, 1\n    ecall\n    jr ra\n\nPrintString:\n    li a7, 4\n    ecall\n    jr ra\n\nExit:\n    li a7, 10\n    ecall\n\n.data\n\narray: .word 0, 4, 6, 1, 2, 3\n\nBOPEN: .asciz \"[ \"\nBCLSE: .asciz \"]\\n\"\nSEP: .asciz \" \"\n```"
    }
]